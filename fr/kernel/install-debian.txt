.. _kernel-installation-debian:

Debian / Ubuntu
===============

.. contents:: Table des matières
    :depth: 2
    :backlinks: top

.. note::
   Une image virtuelle de Ubuntu 10.04 avec ZOO est disponible sur http://www.zoo-project.org/Ubuntu10.4_ZOO.zip
   (root: ZOO.test)

Les instructions suivantes ont été testées sur Debian Squeeze, Ubuntu 10.04 et Ubuntu 10.10

Processus d'installation
------------------------

- installer quelques dépendances

::

  sudo apt-get install flex bison libfcgi-dev libxml2 libxml2-dev curl openssl autoconf checkinstall

- télécharger les sources de ZOO

::

  svn checkout http://svn.zoo-project.org/svn/trunk zoo-project

- installer cgic depuis les paquets

::

  cd zoo-project/thirds/cgic206/

- changer le chemin d'installation

::

  nano Makefile
    - LIBS=-L./ -lcgic ../fcgi-2.4.0/libfcgi/.libs/libfcgi.a --> LIBS=/path/to/libfcgi.a
    - cp libcgic.a  ../../dist/lib --> cp libcgic.a /usr/lib
    - cp cgic.h  ../../dist//include --> cp cgic.h  /usr/include
    - @echo libcgic.a is in  ../../dist/lib and cgic.h is in  ../../dist//include. --> @echo libcgic.a is in  /usr/lib and cgic.h is in /usr/include.

- compiler

::

  make

- installer

::

  sudo make install

- se rendre dans le répertoire du kernel

::

  cd ../../zoo-kernel/

- créer les fichiers de configuration

::

  autoconf

- lancer "configure"

.. note::
   Dans Ubuntu 10.04, le paquet libmozjs-dev n'existe pas, donc pour utiliser le JS vous pouvez compiler `SpiderMonkey <https://developer.mozilla.org/en/SpiderMonkey>`__ ou utiliser le paquet xulrunner-dev
   qui inclus SpiderMonkey.
   Pour PHP, vous devez vous assurer de compiler PHP avec `--enable-embed <http://www.zoo-project.org/trac/wiki/ZooKernel/Embed/PHP#ConfigureandInstallPHPEmbedlibrary>`__.

::

  ./configure --with-java=/path/to/java

  pour JavaScript avec le XulRunner de SpiderMonkey vous devez éditer le fichier de configuration.
    - JS_CPPFLAGS="-I$JSHOME/include/js" --> JS_CPPFLAGS="-I$JSHOME/include"
    - JS_LDFLAGS="-L$JSHOME/lib -ljs -lm" --> JS_LDFLAGS="-L$JSHOME/lib -lmozjs -lm"
    - JS_LIB="js" --> JS_LIB="mozjs"

  ./configure --with-js=/usr/lib/xulrunner-devel.1.9.2.n

- compiler

::

  make zoo_loader.cgi

- copier les fichiers nécessaires dans votre répertoire cgi-bin

::

  sudo cp main.cfg /usr/lib/cgi-bin
  sudo cp zoo_loader.cgi /usr/lib/cgi-bin

- installer le ServiceProvider de ZOO

::

  sudo cp ../zoo-services/hello-py/cgi-env/*.zcfg /usr/lib/cgi-bin
  sudo cp ../zoo-services/hello-py/*.py /usr/lib/cgi-bin/

- changer quelques chemins dans le fichier main.cfg

::

  sudo nano /usr/lib/cgi-bin/main.cfg
    - serverAddress = http://127.0.0.1
    - providerSite = http://127.0.0.1


- essayer l'installation

  - http://127.0.0.1/cgi-bin/zoo_loader.cgi?ServiceProvider=&metapath=&Service=WPS&Request=GetCapabilities&Version=1.0.0
  - http://127.0.0.1/cgi-bin/zoo_loader.cgi?ServiceProvider=&metapath=&Service=WPS&Request=DescribeProcess&Version=1.0.0&Identifier=HelloPy
  - http://127.0.0.1/cgi-bin/zoo_loader.cgi?ServiceProvider=&metapath=&Service=WPS&Request=Execute&Version=1.0.0&Identifier=HelloPy&DataInputs=a=myname

.. note::
   Si vous rencontrez quelques problèmes dans la requête "execute", ajouter les instructions suivantes dans ``main.cfg``:

   ::

     [env]
     PYTHONPATH=<VOTRE_CHEMIN_PYTHON>

