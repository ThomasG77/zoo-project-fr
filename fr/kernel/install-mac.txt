.. _kernel-installation-mac:

Mac OS X
========

.. contents:: Table des matières
    :depth: 2
    :backlinks: top

Utiliser l'installateur
-----------------------

1. Pour installer une version compilée par défaut de ZOO-Project sur votre ordinateur Mac OS X, utiliser `l'installateur <http://www.zoo-project.org/trac/raw-attachment/wiki/ZooDocumentation/ZOOKernel/MacOSX_installation/ZOO-Project-Installer.pkg>`__.

   .. note::
      L'installateur assume que vous utilisez la version de Apache2 qui est déjà installé avec votre Mac. L'installateur
      placera le noyau ZOO-Kernel et le ZOO-Services dans votre cgi-bin au niveau de ``/Library/WebServer/CGI-Executables``,
      et le répertoire zoo-demo sera placé dans la racine de document au niveau de ``/Library/WebServer/Documents``

2. S'assurer que votre serveur Apache fonctionne, et ensuiteaccéder à la démo de ZOO Project sur:

      http://localhost/zoo-demo/spatialtools.html

3. Pour ajouter des services supplémentaires, merci de de suivre les instructions qui suivent pour compiler votre instance de ZOO Project.

Compiler depuis les sources
---------------------------

1. Installer `Xcode <http://developer.apple.com/technologies/tools/>`__.

2. Avant de télécharger le code source de ZOO-Project, vous aurez besoin de d'installer quelques outils nécessaires
   pour compiler le ZOO-Kernel correctement.

   En premier, installer les frameworks PROJ, GEOS et GDAL à partir de `cet emplacement <http://www.kyngchaos.com/software/frameworks>`__.

   A cette étape, vous devriez avoir les répertoires suivants sur votre disque dur :

   ::

     /Library/Frameworks/PROJ.framework
     /Library/Frameworks/GEOS.framework
     /Library/Frameworks/GDAL.framework

3. Ensuite, créer un répertoire ``src`` et dans celui-ci télécharger `le code source de gettext <http://www.gnu.org/software/gettext/#TOCdownloading>`__ et le décompresser.

   Maintenant, compiler gettext avec les instructions suivantes pour compiler un binaire universel :

   ::

     cd gettext-0.18.1.1
     CFLAGS="-O -g -arch i386 -arch ppc -arch x86_64"  \
       LDFLAGS="-arch i386 -arch ppc -arch x86_64"   ./configure
     make
     sudo make install

4. Compiler et installer votre noyau ZOO-Kernel

   - Télécharger les sources depuis le SVN, et utiliser les commandes suivantes pour compiler libcgic :

     ::

       svn co http://svn.zoo-project.org/svn/trunk zoo
       cd zoo/thirds/cgic206
       make

   - Si vous avez produit le fichier ``libcgic.a``, vous pouvez faire tourner ``autoconf`` et ensuite ``configure`` depuis votre répertoire zoo-kernel.

     ::

       cd zoo/zoo-kernel
       autoconf
       ./configure --with-python --with-java=macos \
          --with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.8/Programs/gdal-config

     Evidemment, si vous n'avez pas besoin du support Python ou Java alors vous devriez retirer les options correspondantes de configure.

     .. note::
        Noter que nous utilisons l'option --with-java=macos . Du fait que l'emplacement du JDK sous les plate-formes
        Mac OS X est générique, vous n'avez pas à préciser le chemin complet.

   - Maintenant, lancer les commandes suivantes pour compiler et déployer votre ZOO-Kernel sur votre serveur Apache :

     ::

       make
       cp zoo_loader.cgi main.cfg /Library/WebServer/CGI-Executables

     Vous devriez être prêt maintenant à lancer des requêtes sur votre installation du ZOO-Kernel en suivant le lien suivant :  http://localhost/cgi-bin/zoo_loader.cgi?request=GetCapabilities&service=WPS .

     Si tout est ok, vous pouvez suivre les étapes suivantes pour déployer les nouveaux fournisseurs de services.

     .. note::
        Si vous utilisez vos propres bibliothèques (pas celles par défaut du système) alors vous devez faire attention de créer
        des versions universelles de celles-ci, comme le ZOO-Kernel va essayer de créer un binaire universel.  Si vous ne suivez
        pas ce conseil, vous risquez de recevoir des erreurs de compilation du type ``symbol(s) not found for architecture ppc`` ou ``file was built for
        unsupported file format which is not the architecture being linked (ppc)``.

Déployer les fournisseurs de service OGR
----------------------------------------

Prérequis
*********

Avant d'essayer d'utiliser un service, merci de définir le chemin correct dans ``main.cfg`` pour les variables tmpPath et tmpUrl.

Vous pouvez utiliser le paramétrage suivant :

::

  tmpPath = /Library/WebServer/Documents/tmp
  tmpUrl = ../../tmp

Evidemment, vous devrez créer ce répertoire en utilisant la commande suivante :

::

  mkdir /Library/WebServer/Documents/tmp

Version en C
************

Pour compiler le fournisseur de services base-vect-ops vous allez devoir éditer le Makefile dans le répertoire
*zoo/zoo-services/ogr/base-vect-ops/*. Ajoutez "-I/Library//Frameworks/GEOS.framework/Versions/3/Headers/" à la valeur CFLAGS sur la première ligne.
Pour compiler, ajoutez le framework GDAL à votre variable d'environnement PATH pour vous assurer que l'outil gdal-config sera trouvé,
lancez make et ensuite copiez les fichiers de cgi-env dans votre répertoire /Library/WebServer/CGI-Executables.

::

  cd zoo/zoo-services/ogr/base-vect-ops/
  export PATH=$PATH:/Library/Frameworks/GDAL.framework/Versions/1.7/Programs/
  make
  cp cgi-env/* /Library/WebServer/CGI-Executables

Vous pouvez tester en utilisant cette `url <http://localhost/cgi-bin/zoo_loader.cgi?request=Execute&service=WPS&version=1.0.0&Identifier=Buffer&DataInputs=BufferDistance=1@datatype=interger;InputPolygon=Reference@xlink:href=http%3A%2F%2Fwww.zoo-project.org%3A8082%2Fgeoserver%2Fows%3FSERVICE%3DWFS%26REQUEST%3DGetFeature%26VERSION%3D1.0.0%26typename%3Dtopp%3Astates%26SRS%3DEPSG%3A4326%26FeatureID%3Dstates.15>`__
si tout est ok avec votre paramétrage.

Version en Python
*****************

**Prérequis**

Avant tout, lancer python depuis votre terminal et essayer l'importation suivante depuis votre interpréteur python :

::

  import osgeo.ogr
  import libxml2

Si vous avez une erreur quand vous importez le module libxml2 depuis votre interpréteur python alors cela signifie que vous
allez devoir installer le support de Python  pour la librairie libxml2 qui est déjà installée dans votre environnement Mac OS X.
Pour réaliser ceci, vous devez d'abord déterminer quelle version de libxml2 est installée sur votre plate-forme, en utilisant la commande suivante:

xml2-config --version

Télécharger les sources correspondantes à votre version (par exemple en 10.6.6 vous avez la 2.7.3) à partir de la
`page de téléchargement <ftp://xmlsoft.org/libxml2/>`__ de libxml2 dans votre répertoire ``src`` et les décompresser.

Utiliser la commande suivante pour installer le support de Python :

::

  cd src/libxml2-2.7.3/python/
  python setup.py install

**Déployer les fournisseurs de service OGR basés sur Python**

- Maintenant copier les fichiers ``zoo-services/ogt/base-vect-ops/cgi-env`` dans ``/Library/WebServer/CGI-Executables``.

Vous pouvez tester en utilisant cette `url <http://localhost/cgi-bin/zoo_loader.cgi?request=Execute&service=WPS&version=1.0.0&Identifier=BufferPy&DataInputs=BufferDistance=1@datatype=interger;InputPolygon=Reference@xlink:href=http%3A%2F%2Fwww.zoo-project.org%3A8082%2Fgeoserver%2Fows%3FSERVICE%3DWFS%26REQUEST%3DGetFeature%26VERSION%3D1.0.0%26typename%3Dtopp%3Astates%26SRS%3DEPSG%3A4326%26FeatureID%3Dstates.15>`__
si tout est ok avec votre paramétrage.

Tester en utilisant la page de démo en local
--------------------------------------------

- Télécharger la librairie `OpenLayers <http://openlayers.org>`__ et la décompresser dans votre répertoire personnel pour les Sites
  (situé dans votre répertoire utilisateur).

- Renommer le répertoire OpenLayers en openlayers.

- Télécharger cette `archive zip <http://www.zoo-project.org/trac/raw-attachment/wiki/ZooDocumentation/ZOOKernel/MacOSX_installation/zoo-demo.zip>`__
  et ensuite la décompresser dans votre répertoire Sites personnel.

- Charger vos pages de démonstration en local en utilisant les urls similaires à celles suivantes (en remplaçant MyUserName par votre non d'utilisateur MacOS) :

    *  http://localhost/~MyUserName/zoo-demo/spatialtools.html
    *  http://localhost/~MyUserName/zoo-demo/spatialtools-py.html

